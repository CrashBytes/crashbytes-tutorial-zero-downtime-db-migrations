version: '3.8'

services:
  # Blue Database (Current Production)
  postgres-blue:
    image: postgres:15-alpine
    container_name: migration-demo-blue
    environment:
      POSTGRES_DB: blue_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - blue-data:/var/lib/postgresql/data
      - ./scripts/init-blue.sql:/docker-entrypoint-initdb.d/init.sql
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical"
      - "-c"
      - "max_replication_slots=10"
      - "-c"
      - "max_wal_senders=10"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - migration-network

  # Green Database (New Production)
  postgres-green:
    image: postgres:15-alpine
    container_name: migration-demo-green
    environment:
      POSTGRES_DB: green_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - green-data:/var/lib/postgresql/data
      - ./scripts/init-green.sql:/docker-entrypoint-initdb.d/init.sql
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical"
      - "-c"
      - "max_replication_slots=10"
      - "-c"
      - "max_wal_senders=10"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - migration-network
    depends_on:
      postgres-blue:
        condition: service_healthy

  # pgAdmin for database management (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: migration-demo-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - migration-network
    depends_on:
      - postgres-blue
      - postgres-green

volumes:
  blue-data:
    driver: local
  green-data:
    driver: local
  pgadmin-data:
    driver: local

networks:
  migration-network:
    driver: bridge
